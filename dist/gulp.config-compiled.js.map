{"version":3,"sources":["../gulp.config.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,GAAiB,YAAW;AACxB,QAAI,SAAS,eAAT,CADoB;AAExB,QAAI,SAAS,eAAT,CAFoB;AAGxB,QAAI,YAAY,SAAS,MAAT,CAHQ;AAIxB,QAAI,SAAS,WAAT,CAJoB;AAKxB,QAAI,OAAO,IAAP,CALoB;AAMxB,QAAI,iBAAiB,YAAjB,CANoB;AAOxB,QAAI,OAAO,SAAP,CAPoB;AAQxB,QAAI,UAAU,QAAQ,SAAR,CAAV,CARoB;AASxB,QAAI,aAAa,QAAQ,EAAC,iBAAiB,IAAjB,EAAT,EAAiC,IAAjC,CAAb,CAToB;AAUxB,QAAI,QAAQ;AACR,cAAM,QAAQ,cAAR,CAAN;AACA,mBAAW,qBAAX;AACA,oBAAY,OAAZ;KAHA,CAVoB;AAexB,QAAI,cAAc,cAAd,CAfoB;;AAiBxB,QAAI,SAAS;;;;;AAKT,eAAO,CACH,eADG,EAEH,QAFG,CAAP;AAIA,eAAO,UAAP;AACA,gBAAQ,MAAR;AACA,aAAK,OAAO,YAAP;AACL,eAAO,MAAM,SAAN,GAAkB,2BAAlB;AACP,cAAM,SAAS,WAAT;AACN,uBAAe,YAAY,WAAZ;AACf,gBAAQ,SAAS,eAAT;AACR,eAAO,SAAS,YAAT;;AAEP,YAAI,CACA,YAAY,gBAAZ,EACA,YAAY,SAAZ,EACA,MAAM,SAAN,GAAkB,cAAlB,CAHJ;AAKA,iBAAS,CACL,kBADK,EAEL,gBAFK,EAGL,SAHK,CAAT;AAKA,cAAM,SAAS,oBAAT;AACN,gBAAQ,EAAC,WAAU,CAAV,EAAT;AACA,gBAAQ,MAAR;AACA,cAAM,IAAN;AACA,gBAAQ,MAAR;AACA,gBAAQ,MAAR;AACA,iBAAS,CACL,MAAM,SAAN,GAAkB,gCAAlB,EACA,SAAS,eAAT,CAFJ;AAIA,cAAM,IAAN;;;;;AAKA,mBAAW;AACP,iBAAK,QAAL;AACA,iBAAK,QAAL;SAFJ;;;;;AAQA,eAAO,EAAC,IAAI,YAAY,SAAZ,EAAZ;;;;;AAKA,4BAAoB,IAApB;;;;;AAKA,uBAAe;AACX,kBAAM,cAAN;AACA,qBAAS;AACL,wBAAQ,UAAR;AACA,sBAAM,MAAN;AACA,4BAAY,KAAZ;aAHJ;SAFJ;;;;;AAYA,eAAO,KAAP;AACA,kBAAU,CACN,gBADM,EAEN,cAFM,CAAV;;;;;AAQA,oBAAY,SAAS,cAAT;AACZ,wBAAgB,cAAhB;;;;;;;;;;;;AAYA,uBAAe,CACX,cAAc,iBAAd,EACA,cAAc,eAAd,EACA,cAAc,+BAAd,CAHJ;AAKA,qBAAa,CAAC,SAAS,mBAAT,CAAd;AACA,eAAO,CAAC,YAAY,cAAZ,CAAR;AACA,gCAAwB,CAAC,SAAS,wCAAT,CAAzB;;;;;AAKA,oBAAY,SAAS,QAAT;AACZ,qBAAa,MAAb;KA5GA;;;;;AAjBoB,UAmIxB,CAAO,wBAAP,GAAkC,YAAW;AACzC,YAAI,UAAU;AACV,uBAAW,OAAO,KAAP,CAAa,IAAb;AACX,uBAAW,OAAO,KAAP,CAAa,SAAb;AACX,wBAAY,OAAO,KAAP,CAAa,UAAb;SAHZ,CADqC;AAMzC,eAAO,OAAP,CANyC;KAAX;;;;;AAnIV,UA+IxB,CAAO,KAAP,GAAe,iBAAf,CA/IwB;;AAiJxB,WAAO,MAAP;;;;AAjJwB,aAqJf,eAAT,GAA2B;AACvB,YAAI,UAAU;AACV,mBAAO,GAAG,MAAH,CACH,UADG,EAEH,OAAO,WAAP,EACA,YAAY,gBAAZ,EACA,YAAY,SAAZ,EACA,OAAO,OAAO,aAAP,CAAqB,IAArB,EACP,OAAO,sBAAP,CANJ;AAQA,qBAAS,EAAT;AACA,sBAAU;AACN,qBAAK,SAAS,UAAT;AACL,2BAAW;;AAEP,kBAAC,MAAM,MAAN,EAAc,QAAQ,aAAR,EAFR,EAGP,EAAC,MAAM,MAAN,EAAc,QAAQ,aAAR,EAHR,EAIP,EAAC,MAAM,cAAN;AAJM,iBAAX;aAFJ;AASA,2BAAe,EAAf;SAnBA,CADmB;AAsBvB,gBAAQ,aAAR,CAAsB,YAAY,oBAAZ,CAAtB,GAA0D,CAAC,UAAD,CAA1D,CAtBuB;AAuBvB,eAAO,OAAP,CAvBuB;KAA3B;CArJa","file":"gulp.config-compiled.js","sourcesContent":["module.exports = function() {\n    var client = './src/client/';\n    var server = './src/server/';\n    var clientApp = client + 'app/';\n    var report = './report/';\n    var root = './';\n    var specRunnerFile = 'specs.html';\n    var temp = './.tmp/';\n    var wiredep = require('wiredep');\n    var bowerFiles = wiredep({devDependencies: true})['js'];\n    var bower = {\n        json: require('./bower.json'),\n        directory: './bower_components/',\n        ignorePath: '../..'\n    };\n    var nodeModules = 'node_modules';\n\n    var config = {\n        /**\n         * File paths\n         */\n        // all javascript that we want to vet\n        alljs: [\n            './src/**/*.js',\n            './*.js'\n        ],\n        build: './build/',\n        client: client,\n        css: temp + 'styles.css',\n        fonts: bower.directory + 'font-awesome/fonts/**/*.*',\n        html: client + '**/*.html',\n        htmltemplates: clientApp + '**/*.html',\n        images: client + 'images/**/*.*',\n        index: client + 'index.html',\n        // app js, with no specs\n        js: [\n            clientApp + '**/*.module.js',\n            clientApp + '**/*.js',\n            '!' + clientApp + '**/*.spec.js'\n        ],\n        jsOrder: [\n            '**/app.module.js',\n            '**/*.module.js',\n            '**/*.js'\n        ],\n        less: client + 'styles/styles.less',\n        jshint: {esversion:6},\n        report: report,\n        root: root,\n        server: server,\n        source: 'src/',\n        stubsjs: [\n            bower.directory + 'angular-mocks/angular-mocks.js',\n            client + 'stubs/**/*.js'\n        ],\n        temp: temp,\n\n        /**\n         * optimized files\n         */\n        optimized: {\n            app: 'app.js',\n            lib: 'lib.js'\n        },\n\n        /**\n         * plato\n         */\n        plato: {js: clientApp + '**/*.js'},\n\n        /**\n         * browser sync\n         */\n        browserReloadDelay: 1000,\n\n        /**\n         * template cache\n         */\n        templateCache: {\n            file: 'templates.js',\n            options: {\n                module: 'app.core',\n                root: 'app/',\n                standalone: false\n            }\n        },\n\n        /**\n         * Bower and NPM files\n         */\n        bower: bower,\n        packages: [\n            './package.json',\n            './bower.json'\n        ],\n\n        /**\n         * specs.html, our HTML spec runner\n         */\n        specRunner: client + specRunnerFile,\n        specRunnerFile: specRunnerFile,\n\n        /**\n         * The sequence of the injections into specs.html:\n         *  1 testlibraries\n         *      mocha setup\n         *  2 bower\n         *  3 js\n         *  4 spechelpers\n         *  5 specs\n         *  6 templates\n         */\n        testlibraries: [\n            nodeModules + '/mocha/mocha.js',\n            nodeModules + '/chai/chai.js',\n            nodeModules + '/sinon-chai/lib/sinon-chai.js'\n        ],\n        specHelpers: [client + 'test-helpers/*.js'],\n        specs: [clientApp + '**/*.spec.js'],\n        serverIntegrationSpecs: [client + '/tests/server-integration/**/*.spec.js'],\n\n        /**\n         * Node settings\n         */\n        nodeServer: server + 'app.js',\n        defaultPort: '8001'\n    };\n\n    /**\n     * wiredep and bower settings\n     */\n    config.getWiredepDefaultOptions = function() {\n        var options = {\n            bowerJson: config.bower.json,\n            directory: config.bower.directory,\n            ignorePath: config.bower.ignorePath\n        };\n        return options;\n    };\n\n    /**\n     * karma settings\n     */\n    config.karma = getKarmaOptions();\n\n    return config;\n\n    ////////////////\n\n    function getKarmaOptions() {\n        var options = {\n            files: [].concat(\n                bowerFiles,\n                config.specHelpers,\n                clientApp + '**/*.module.js',\n                clientApp + '**/*.js',\n                temp + config.templateCache.file,\n                config.serverIntegrationSpecs\n            ),\n            exclude: [],\n            coverage: {\n                dir: report + 'coverage',\n                reporters: [\n                    // reporters not supporting the `file` property\n                    {type: 'html', subdir: 'report-html'},\n                    {type: 'lcov', subdir: 'report-lcov'},\n                    {type: 'text-summary'} //, subdir: '.', file: 'text-summary.txt'}\n                ]\n            },\n            preprocessors: {}\n        };\n        options.preprocessors[clientApp + '**/!(*.spec)+(.js)'] = ['coverage'];\n        return options;\n    }\n};\n"]}