{"version":3,"sources":["../src/client/app/core/dataservice.js"],"names":[],"mappings":"AAAA,CAAC,YAAY;;AAET,iBAFS;;AAIT,YACK,MADL,CACY,UADZ,EAEK,OAFL,CAEa,aAFb,EAE4B,WAF5B,EAJS;;AAQT,gBAAY,OAAZ,GAAsB,CAAC,OAAD,EAAU,IAAV,EAAgB,WAAhB,EAA6B,QAA7B,CAAtB;;;AARS,aAWA,WAAT,CAAqB,KAArB,EAA4B,EAA5B,EAAgC,SAAhC,EAA2C,MAA3C,EAAmD;;AAE/C,YAAI,UAAU;AACV,uBAAW,SAAX;AACA,uBAAW,SAAX;AACA,6BAAiB,eAAjB;SAHA,CAF2C;;AAQ/C,eAAO,OAAP,CAR+C;;AAU/C,iBAAS,eAAT,GAA2B;AAAE,mBAAO,GAAG,IAAH,CAAQ,EAAR,CAAP,CAAF;SAA3B;;AAEA,iBAAS,SAAT,GAAqB;AACjB,mBAAO,MAAM,GAAN,CAAU,aAAV,EACF,IADE,CACG,OADH,EAEF,KAFE,CAEI,IAFJ,CAAP,CADiB;;AAKjB,qBAAS,OAAT,CAAiB,QAAjB,EAA2B;AACvB,uBAAO,SAAS,IAAT,CADgB;aAA3B;;AAIA,qBAAS,IAAT,CAAc,CAAd,EAAiB;AACb,uBAAO,UAAU,OAAV,CAAkB,0BAAlB,EAA8C,CAA9C,CAAP,CADa;aAAjB;SATJ;AAaA,iBAAS,SAAT,GAAqB;AACjB,mBAAO,MAAM,GAAN,CAAU,aAAV,EACF,IADE,CACG,OADH,EAEF,KAFE,CAEI,IAFJ,CAAP,CADiB;;AAKjB,qBAAS,OAAT,CAAiB,QAAjB,EAA2B;AACvB,uBAAO,gBAAgB,SAAS,IAAT,CAAvB,CADuB;aAA3B;;AAIA,qBAAS,IAAT,CAAc,CAAd,EAAiB;AACb,uBAAO,UAAU,OAAV,CAAkB,0BAAlB,EAA8C,CAA9C,CAAP,CADa;aAAjB;SATJ;AAaA,iBAAS,eAAT,CAAyB,IAAzB,EAA8B;;AAE1B,gBAAI,SAAS,KAAK,MAAL,CAFa;AAG1B,cAAE,IAAF,CAAO,MAAP,EAAe,UAAU,CAAV,EAAa;;AAExB,oBAAI,UAAU,EAAE,IAAF,CAAO,KAAK,QAAL,EAAe,UAAU,CAAV,EAAa;AAC7C,2BAAO,EAAE,EAAF,KAAS,EAAE,QAAF,CAD6B;iBAAb,CAAhC,CAFoB;AAKxB,oBAAI,CAAC,OAAD,EAAU;AACV,4BAAQ,GAAR,CAAY,0BAAZ,EAAwC,CAAxC,EADU;AAEV,2BAFU;iBAAd;;AAKA,oBAAI,mBAAmB,EAAE,WAAF;;AAVC,iBAYxB,CAAE,cAAF,GAAmB,EAAnB,CAZwB;AAaxB,mCAAmB,WAAW,gBAAX,CAAnB,CAbwB;AAcxB,oBAAI,iBAAiB,MAAjB,GAA0B,GAA1B,EAA+B;AAC/B,sBAAE,cAAF,GAAmB,UAAnB,CAD+B;iBAAnC;AAGA,kBAAE,QAAF,CAAW,CAAX,EAAa;AACT,2BAAM,EAAN;AACA,+BAAW,IAAX;AACA,iCAAa,EAAb;AACA,uCAAmB,gBAAnB;AACA,8BAAU,KAAV;AACA,uCAAmB,KAAnB;AACA,8BAAU,EAAV;AACA,kCAAa,EAAb;AACA,2BAAM,EAAN;iBATJ,EAjBwB;;AA6BxB,kBAAE,eAAF,GAAoB,QAAQ,eAAR,CA7BI;AA8BxB,kBAAE,SAAF,GAAc,EAAd,CA9BwB;aAAb,CAAf,CAH0B;AAoC1B,mBAAO,IAAP,CApC0B;SAA9B;KAtCJ;CAXH,CAAD","file":"dataservice-compiled.js","sourcesContent":["(function () {\n\n    'use strict';\n\n    angular\n        .module('app.core')\n        .factory('dataservice', dataservice);\n\n    dataservice.$inject = ['$http', '$q', 'exception', 'logger'];\n\n    /* @ngInject */\n    function dataservice($http, $q, exception, logger) {\n\n        var service = {\n            getPeople: getPeople,\n            getEvents: getEvents,\n            getMessageCount: getMessageCount\n        };\n\n        return service;\n\n        function getMessageCount() { return $q.when(72); }\n\n        function getPeople() {\n            return $http.get('/api/people')\n                .then(success)\n                .catch(fail);\n\n            function success(response) {\n                return response.data;\n            }\n\n            function fail(e) {\n                return exception.catcher('XHR Failed for getPeople')(e);\n            }\n        }\n        function getEvents() {\n            return $http.get('/api/events')\n                .then(success)\n                .catch(fail);\n\n            function success(response) {\n                return normalizeEvents(response.data);\n            }\n\n            function fail(e) {\n                return exception.catcher('XHR Failed for getPeople')(e);\n            }\n        }\n        function normalizeEvents(data){\n\n            var events = data.events;\n            _.each(events, function (e) {\n\n                var account = _.find(data.accounts, function (a) {\n                    return a.id === e.calendar\n                });\n                if (!account) {\n                    console.log(\"No matching account for:\", e);\n                    return;\n                }\n\n                var shortDescription = e.description;\n                // need this if text is too long\n                e.ellipsis_class = '';\n                shortDescription = removeTags(shortDescription);\n                if (shortDescription.length > 200) {\n                    e.ellipsis_class = 'ellipsis';\n                }\n                _.defaults(e,{\n                    title:'',\n                    read_only: true,\n                    description: '',\n                    short_description: shortDescription,\n                    canceled: false,\n                    rsvp_status_descr: false,\n                    location: '',\n                    participants:[],\n                    owner:''\n                });\n\n                e.backgroundColor = account.backgroundColor;\n                e.className = [];\n\n            });\n            return data;\n        }\n\n    }\n\n})();\n"]}